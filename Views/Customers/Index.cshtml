@model IEnumerable<NotifyHub.Models.Domain.Customer>

@{
    ViewBag.Title = "Customers";
}

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>User Management</h2>
        <!-- Create Customer Button -->
        @Html.Partial("_CreateCustomerPartial", new NotifyHub.Models.ViewModels.CustomerViewModel())
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createCustomerModal">
            <i class="bi bi-person-plus"></i> Add New Customer
        </button>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (Model == null || !Model.Any())
    {
        <div class="alert alert-info text-center">
            <h4>No Customers found.</h4>
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover table-striped text-center">
                <thead class="table-light">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IsActive)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Phone)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ConnectionDetail)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IsActive)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Phone)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ConnectionDetail)
                            </td>
                            <td class="text-center">
                                <!-- Edit Button -->
                                <button type="button" class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#editCustomerModal-@item.Id">
                                    <i class="bi bi-pencil-square"></i>
                                </button>

                                <!-- Delete Button -->
                                <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteCustomerModal-@item.Id">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>

                        var cvm = new NotifyHub.Models.ViewModels.CustomerViewModel
                        {
                            Id = item.Id,
                            IsActive = item.IsActive,
                            Name = item.Name,
                            Phone = item.Phone,
                            ConnectionDetail = item.ConnectionDetail,
                            CustomerEmails = item.CustomerEmails
                                .Select(i => new NotifyHub.Models.ViewModels.CustomerEmailViewModel
                                {
                                    Id = i.Id,
                                    Email = i.Email,
                                    IsActive = i.IsActive,
                                    IsPrimary = i.IsPrimary
                                })
                                .ToList()
                        };


                        @Html.Partial("_EditCustomerPartial", cvm)

                        <!-- Delete User Modal -->
                        <div class="modal fade" id="deleteCustomerModal-@item.Id" tabindex="-1">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    @using (Html.BeginForm("Delete", "Customer", FormMethod.Post))
                                    {
                                        <div class="modal-header">
                                            <h5 class="modal-title">Confirm Deletion</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                                        </div>
                                        <div class="modal-body">
                                            @Html.AntiForgeryToken()
                                            <p>
                                                Are you sure you want to delete <strong>@item.Name</strong> with an URL :
                                                <a href="@item.ConnectionDetail" class="text-decoration-none link-primary">@item.ConnectionDetail</a> ?
                                            </p>
                                            @Html.Hidden("id", item.Id)
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                            <button type="submit" class="btn btn-danger">Delete</button>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </tbody>
            </table>
        </div>
    }
</div>